input {
	beats {
		port => 5044
	}

	tcp {
		port => 50000
	}
}

# /////////////////////////////////////////////////////////////////////

## Add your filters / logstash plugins configuration here
filter{
	grok{
		match =>{
			"message" => [
				'%{NUMBER:pid} %{TIME:time}  %{NUMBER:pid2} (?<info_1>.*\]) (?<ActionType>[^|]*)\|(?<ErrorCount>[^|]*)\|(?<QueryTime>[\d]+)ms\|(?<LogSource>[^|]*)\|(?<SomeInfo>[^|]*)\|user:(?<User>[^|]*)\|(?<Route>[^|]*)\|graph_id=(?<GraphID>[^|]*)\|%{NUMBER:SomeNumber}',
				'{"level":%{QS:level},"ts":"%{TIMESTAMP_ISO8601:time}","caller":%{QS:caller},"msg":%{QS:msg},"reqID":%{QS:request_id},"username":%{QS:username},"client_ip":"%{IPV4:client_ip}","method":%{QS:method},"path":"%{PATH:path}","session_id":%{QS:session_id}}',
				'{"level":%{QS:level},"ts":"%{TIMESTAMP_ISO8601:time}","caller":%{QS:caller},"msg":%{QS:msg},"reqID":%{QS:request_id},"session_id":%{QS:session_id},"status_code":%{INT:status_code},"latency":"%{INT:latency}ms"}'
			]
		}
	}

	if [msg] == '"logRequest"' {
		aggregate {
			task_id => "%{request_id}"
			code => "map['path'] = event.get('path')"
			map_action => "create"
			add_tag => ["tagged"]
		}
	}

	if [msg] == '"logResponse"' {
		aggregate {
			task_id => "%{request_id}"
			code => "event.set('path', map['path'])"
			map_action => "update"
			add_tag => ["tagged_2"]
			end_of_task => true
			timeout => 120
		}
	}
}

output {
	elasticsearch {
		hosts => "elasticsearch:9200"
		user => "logstash_internal"
		password => "${LOGSTASH_INTERNAL_PASSWORD}"
	}
}


input {
	beats {
		port => 5044
	}

	tcp {
		port => 50000
	}
}

## Add your filters / logstash plugins configuration here
filter{
	grok{
		match =>{"message" => [
			'%{NUMBER:pid} %{TIME:time}  %{NUMBER:pid2} (?<info_1>.*\]) (?<ActionType>[^|]*)\|(?<ErrorCount>[^|]*)\|%{NUMBER:QueryTime}ms\|(?<LogSource>[^|]*)\|(?<SomeInfo>[^|]*)\|user:(?<User>[^|]*)\|(?<Route>[^|]*)\|graph_id=(?<GraphID>[^|]*)\|%{NUMBER:SomeNumber}',
			'{"level":"%{USERNAME:level}","ts":"(?<date>[^"]*)","caller":"(?<caller>[^"]*)","msg":"%{USERNAME:msg}","reqID":"(?<reqID>[^"]*)","status_code":%{BASE10NUM:status_code},"latency":"%{BASE10NUM:latency}","username":"%{USERNAME:username}","client_ip":"%{IPV4:client_ip}","method":"%{USERNAME:method}","path":"(?<path>[^"]*)","error":"(?<error>[^"]*)'
		]}
	}
	mutate{
		convert => {
			"QueryTime" => "integer"
			"latency" => "integer"
		}
	}
}

output {
	elasticsearch {
		hosts => "elasticsearch:9200"
		user => "logstash_internal"
		password => "${LOGSTASH_INTERNAL_PASSWORD}"
	}
}
